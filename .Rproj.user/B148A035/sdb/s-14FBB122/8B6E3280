{
    "contents" : "\n#' @title Bootstrap Estimation of Correlation\n#' @export\n#' @return Returns a list containing: the estimated correlation of the two given vectors, the bootstrap estimated correlation of the data, as well as the standard error, bias and the 95 percent confidence interval.\n#' @usage bootstrap.correlation(n=200, x , y, plot = FALSE)\n#' @keywords bootstrap estimation correlation standard error bias confidence interval\n#' @description This function takes as arguments the number of bootstrap replicates \\code{n},\n#' \\code{x} and \\code{y} which are two numerical vectors / data, then bootstrap from \\code{x ,y}, and calculate the correlation of these data for each resampling n times.\n#' If \\code{plot} is chosen to be TRUE, then the function plots the histogram, as well as the 95% confidence interval for the\n#' estimates.\n#' @import graphics stats\n#' @param n is a positive integer that specifies how many bootstrap replicates should be used for estimation.\n#' @param x is a vector of numeric values to be used with y to estimate correlation and bootstrap estimates.\n#' @param y is a vector of numeric values to be used with x to estimate correlation and bootstrap estimates. y has to be of the same length as x.\n#' @param plot is a boolean value that specifies whether a plot should be created or not\n#' @author Nguyen Khanh Le Ho & Emil H. Andersen \\cr\n#' Department of Mathematics and Computer Science (IMADA) \\cr\n#' University of Southern Denmark, Denmark \\cr\n#' \\email{emila14@student.sdu.dk} \\cr\n#' \\email{ngho14@student.sdu.dk} \\cr\n#' @examples\n#' bootstrap.correlation(n=2000,cars$speed,cars$dist, plot=TRUE )\n\n\nbootstrap.correlation <- function(n = 200, x , y, plot = FALSE){\n\n  #------------------------------------Error Handler:--------------------------------------#\n  # ---------------------------------------------------------------------------------------#\n  # 'n' must be numeric, natural number greater than 1.                                    #\n  # 'x, y' must be numerical vectors.                                                      #\n  # 'plot' must be a boolean valued.                                                       #\n  #----------------------------------------------------------------------------------------#\n\n  if(is.matrix(n) || is.list(n) || length(n)!=1){ #Check that n is a single value\n    stop(\"'n' has to be a positive integer; length=1, non-list, non-matrix\")\n  } else if(!is.numeric(n)){ #checks if n is a number\n    stop(\"'n' has to be a positive integer\")\n  } else if(n < 1 || n != round(n)){ #checks if n is a natural number\n    stop(\"'n' has to be a positive integer\")\n  }\n  if(is.list(y) || is.list(x) || !is.numeric(x) || !is.numeric(y) || is.matrix(x+y) || !is.vector(x+y)   ){\n    stop(\" The given data 'x' or 'y' must be numerical vectors.\")\n  }\n  if(length(x) != length(y)){ #We check if x and y has same length\n      stop(\"'x' and 'y' has to be of the same length.\")\n  }\n  if(!is.logical(plot)|| length(plot) != 1){\n    stop(\"'plot' must be a single logical value.\")\n  }\n  #---------------------------------------End Error Handler---------------------------------#\n  correlation <- cor(x,y) #First get the true correlation\n  N <- length(x) #we set N\n  storage <- numeric(n) #We make space for n correlation estimates\n  for (i in 1:n){\n    j <- sample(1:N, size = N, replace = TRUE) #This sample is just a list of \"slots\" we want to take from in x and y\n    xSample <- x[j] #Sample from x\n    ySample <- y[j] #Sample from y\n    storage[i] <- cor(xSample,ySample) #Estimate the correlation\n  }\n  BootstrapCor <- mean(storage) #We get the mean of the estimates\n  se <- sd(storage) #standard deviation of correlations is in fact standard error\n  bias <- mean(storage) - correlation #Estimate bias\n  alpha <- 0.05 #alpha is set for a 95% confidence interval\n  value <- round(qnorm(1-alpha/2),digits=2) #\"value\" is z\n  CI <- c(BootstrapCor - value*se, BootstrapCor + value*se) #Confidence interval given in a vector\n  #We save a list of returned values to easily work with if user is interested in specific values\n  returnedList <- list(\"TrueCor\" = correlation, \"BSCor\" = BootstrapCor, \"SE\" = se, \"Bias\" = bias, \"CI\" = CI)\n  if(plot == TRUE){ #If user wants a histogram.\n    #Breaks are set in the smallest possible interval to optimize presentation\n    hist(storage, breaks=seq(round(min(storage),digits=2)-0.01,round(max(storage),digits=2)+0.01,0.01), main=\"Histogram of correlations\", xlab=\"correlations\")\n    abline(v = correlation, col=\"red\") #True correlation\n    abline(v = CI[1], col=\"blue\", lty=2) #Confidence interval 1\n    abline(v = CI[2], col=\"blue\", lty=2) #Confidence interval 2\n  }\n  return(returnedList) #Finally, the list is returned.\n}\n",
    "created" : 1465123537781.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3731507412",
    "id" : "8B6E3280",
    "lastKnownWriteTime" : 1465123743,
    "path" : "C:/Users/Emil/Dropbox/Universitet/ST522/FinalProjectCombined/GitHub/LemilExamST522/R/bootstrap.correlation.R",
    "project_path" : "R/bootstrap.correlation.R",
    "properties" : {
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "type" : "r_source"
}